<?xml version="1.0" encoding="UTF-8"?>
<project
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://maven.apache.org/POM/4.0.0"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.aoede</groupId>
		<artifactId>apps-parent</artifactId>
		<version>0-SNAPSHOT</version>
	</parent>

	<groupId>com.aoede.apps</groupId>
	<artifactId>aoede-server</artifactId>

	<!-- Meta-data -->
	<name>[${project.artifactId}]</name>
	<description>Aoede application</description>

	<!-- Dependencies -->
	<dependencies>

		<dependency>
			<groupId>com.aoede.commons</groupId>
			<artifactId>common-base</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>com.aoede.modules</groupId>
			<artifactId>module-music</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
		</dependency>

		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>

		<!-- Testing -->

		<dependency>
			<groupId>com.aoede.commons</groupId>
			<artifactId>common-cucumber</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<!-- Plugins and corresponding configuration used by all modules -->
		<plugins>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<delimiters>
						<!-- Certain JDBC connection URLs contain special character like the Oracle case -->
						<delimiter>#</delimiter>
					</delimiters>
					<useDefaultDelimiters>false</useDefaultDelimiters>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>enforce-versions</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireJavaVersion>
									<version>${java.version}</version>
								</requireJavaVersion>
								<requireMavenVersion>
									<version>${maven.version}</version>
								</requireMavenVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<!--
					In order to compile your project for Java 11, add the release configuration to the compiler
					plugin, a new compiler parameter to replace the source and target version parameters
					-->
					<release>${java.version}</release>
					<forceJavacCompilerUse>true</forceJavacCompilerUse>
					<optimize>true</optimize>
					<fork>true</fork>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>

			<!--
			- Scans a project's dependencies and produces a report of those dependencies which have newer
			- versions available:
			- mvn versions:display-dependency-updates
			-
			- Scans a project and produces a report of those properties which are used to control artifact
			- versions and which properties have newer versions available:
			- mvn versions:display-property-updates
			-
			- Scans a project's plugins and produces a report of those plugins which have newer versions
			- available, taking care of Maven version prerequisites:
			- mvn versions:display-plugin-updates
			-->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<configuration>
					<generateBackupPoms>false</generateBackupPoms>
					<!-- In case we want to exclude a library from check -->
					<!--
					<excludes>
						<exclude>org.apache.commons:commons-collections4</exclude>
					</excludes>
					-->
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<argLine>
						--illegal-access=permit
					</argLine>
					<includes>
						<include>**/CucumberTest**</include>
					</includes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<argLine>
						--illegal-access=permit
					</argLine>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-remote-resources-plugin</artifactId>
				<executions>

					<execution>
						<id>load-aoede-client</id>
						<phase>initialize</phase>
						<goals>
							<goal>process</goal>
						</goals>
						<configuration>
							<resourceBundles>
								<resourceBundle>com.aoede.angular:aoede-client:${project.version}</resourceBundle>
							</resourceBundles>
							<attachToMain>true</attachToMain>
							<attachToTest>true</attachToTest>
							<outputDirectory>${project.build.directory}/dependencies/aoede-client</outputDirectory>
						</configuration>
					</execution>

				</executions>
			</plugin>

		</plugins>

		<!-- Resources -->
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*.html</include>
					<include>**/*.properties</include>
					<include>**/*.yml</include>
					<include>**/*.xml</include>
					<include>**/*.csv</include>
					<include>**/*.sql</include>
					<include>**/*.ftl</include>
					<include>**/*.pem</include>
					<include>**/*.txt</include>
					<include>**/*.svg</include>
				</includes>
				<filtering>true</filtering>
			</resource>
		</resources>

		<defaultGoal>package</defaultGoal>
		<directory>${basedir}/target</directory>
		<finalName>${project.artifactId}-${project.version}</finalName>
	</build>

</project>
