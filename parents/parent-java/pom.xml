<?xml version="1.0" encoding="UTF-8"?>
<project
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://maven.apache.org/POM/4.0.0"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<!-- Packaging -->
	<modelVersion>4.0.0</modelVersion>
	<packaging>pom</packaging>

	<parent>
		<groupId>com.aoede.parents</groupId>
		<artifactId>parents-parent</artifactId>
		<version>0-SNAPSHOT</version>
	</parent>

	<artifactId>parent-java</artifactId>

	<!-- Meta-data -->
	<name>[${project.artifactId}]</name>
	<description>Parent pom for java modules</description>
	<inceptionYear>2022</inceptionYear>

	<dependencyManagement>
		<dependencies>

			<!-- spring boot dependencies -->

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<!-- Dependencies -->
	<dependencies>
		<!-- You can easily generate your own configuration metadata file from items annotated with
		@ConfigurationProperties by using the spring-boot-configuration-processor jar. The jar includes a Java
		annotation processor which is invoked as your project is compiled. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- you need to exclude spring-boot-starter-logging dependency as Logback is the default implementation -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
				<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>

		<dependency>
			<groupId>com.lmax</groupId>
			<artifactId>disruptor</artifactId>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<!--<optional>true</optional>-->
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
		</dependency>

		<!-- Testing -->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-java</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-junit</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-spring</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
						<configuration>
							<skipIfEmpty>true</skipIfEmpty>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.aoede.plugins</groupId>
				<artifactId>plugin-source-validation</artifactId>
				<version>${project.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>validate</goal>
						</goals>
						<configuration>
							<includePom>true</includePom>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
					<configuration>
					<filesets>
						<fileset>
							<directory>src/main/webapp/node</directory>
							<followSymlinks>false</followSymlinks>
						</fileset>
						<fileset>
							<directory>src/main/webapp/node_modules</directory>
							<followSymlinks>false</followSymlinks>
						</fileset>
						<fileset>
							<directory>src/main/webapp/.angular</directory>
							<followSymlinks>false</followSymlinks>
						</fileset>
					</filesets>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-remote-resources-plugin</artifactId>
				<version>${remote-resources-plugin.version}</version>
				<executions>

					<execution>
						<id>load-cucumber-resources</id>
						<phase>initialize</phase>
						<goals>
							<goal>process</goal>
						</goals>
						<configuration>
							<resourceBundles>
								<resourceBundle>com.aoede.resources:resource-cucumber:${project.version}</resourceBundle>
							</resourceBundles>
							<attachToMain>false</attachToMain>
							<attachToTest>true</attachToTest>
							<outputDirectory>${project.build.directory}/dependencies/resource-cucumber</outputDirectory>
						</configuration>
					</execution>

				</executions>
			</plugin>

		</plugins>
	</build>

</project>
